// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShippingSystem.DAL.Models;

#nullable disable

namespace ShippingSystem.DAL.Migrations
{
    [DbContext(typeof(ShippingDBContext))]
    partial class ShippingDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.AccessedEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccessedEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Settings"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Branches"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Employees"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Merchants"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Deliveries"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "Governorates"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Name = "Cities"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Name = "Orders"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Name = "Financials"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Name = "Reports"
                        });
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("BranchID")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("BranchID");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("RoleID");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<int?>("GovernmentID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("GovernmentID");

                    b.ToTable("Branch");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GovernmentID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("GovernmentID");

                    b.ToTable("City");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.DeliveryAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("BranchID")
                        .HasColumnType("int");

                    b.Property<decimal>("Company_Percantage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount_type")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchID");

                    b.HasIndex("RoleID");

                    b.ToTable("DeliveryAccounts", (string)null);
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Government", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BranchID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BranchID");

                    b.ToTable("Government");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.MerchantAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("BranchID")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Government")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<decimal>("Pickup_Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Refund_Percentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchID");

                    b.HasIndex("RoleID");

                    b.ToTable("MerchantAccounts", (string)null);
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CitytId")
                        .HasColumnType("int");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<int?>("DeliveryID")
                        .HasColumnType("int");

                    b.Property<decimal?>("DeliveryPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly?>("DeliverydDate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GovernmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MerchantID")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PaiedMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PaymentTypeID")
                        .HasColumnType("int");

                    b.Property<string>("PhoneOne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ReceivedMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ShippingTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("StaffMemberID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAndVillage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalWeight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CitytId");

                    b.HasIndex("DeliveryID");

                    b.HasIndex("GovernmentId");

                    b.HasIndex("MerchantID");

                    b.HasIndex("PaymentTypeID");

                    b.HasIndex("ShippingTypeID");

                    b.HasIndex("StaffMemberID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PaymentType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Cash"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Visa"
                        });
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permission");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Create"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Update"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Delete"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Read"
                        });
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Permission_User_Entities", b =>
                {
                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.Property<int>("permission_id")
                        .HasColumnType("int");

                    b.Property<int>("entity_id")
                        .HasColumnType("int");

                    b.HasKey("user_id", "permission_id", "entity_id");

                    b.HasIndex("entity_id");

                    b.HasIndex("permission_id");

                    b.ToTable("Permission_User_Entities");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("order_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("order_Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Merchant"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Employee"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Delivery"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.ShippingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ShippingType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Normal",
                            Price = 30m
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "7 Days",
                            Price = 50m
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "24 Hour",
                            Price = 70m
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.Account", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.Account", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShippingSystem.DAL.Models.Account", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.Account", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Account", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.Branch", "Branch")
                        .WithMany("Accounts")
                        .HasForeignKey("BranchID");

                    b.HasOne("ShippingSystem.DAL.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleID");

                    b.Navigation("Branch");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Branch", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.Government", "Government")
                        .WithMany()
                        .HasForeignKey("GovernmentID");

                    b.Navigation("Government");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.City", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.Government", "Government")
                        .WithMany("Cities")
                        .HasForeignKey("GovernmentID");

                    b.Navigation("Government");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.DeliveryAccount", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchID");

                    b.HasOne("ShippingSystem.DAL.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID");

                    b.Navigation("Branch");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Government", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchID");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.MerchantAccount", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchID");

                    b.HasOne("ShippingSystem.DAL.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID");

                    b.Navigation("Branch");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Order", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.City", "city")
                        .WithMany()
                        .HasForeignKey("CitytId");

                    b.HasOne("ShippingSystem.DAL.Models.DeliveryAccount", "DeliveryAccount")
                        .WithMany("Orders")
                        .HasForeignKey("DeliveryID");

                    b.HasOne("ShippingSystem.DAL.Models.Government", "government")
                        .WithMany()
                        .HasForeignKey("GovernmentId");

                    b.HasOne("ShippingSystem.DAL.Models.MerchantAccount", "MerchantAccount")
                        .WithMany("Orders")
                        .HasForeignKey("MerchantID");

                    b.HasOne("ShippingSystem.DAL.Models.PaymentType", "paymentType")
                        .WithMany("orders")
                        .HasForeignKey("PaymentTypeID");

                    b.HasOne("ShippingSystem.DAL.Models.ShippingType", "ShippingType")
                        .WithMany("Orders")
                        .HasForeignKey("ShippingTypeID");

                    b.HasOne("ShippingSystem.DAL.Models.Account", "StaffMemberAccount")
                        .WithMany("Orders")
                        .HasForeignKey("StaffMemberID");

                    b.Navigation("DeliveryAccount");

                    b.Navigation("MerchantAccount");

                    b.Navigation("ShippingType");

                    b.Navigation("StaffMemberAccount");

                    b.Navigation("city");

                    b.Navigation("government");

                    b.Navigation("paymentType");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Permission_User_Entities", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.AccessedEntity", "entity")
                        .WithMany()
                        .HasForeignKey("entity_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShippingSystem.DAL.Models.Permission", "permission")
                        .WithMany()
                        .HasForeignKey("permission_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShippingSystem.DAL.Models.Account", "account")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("account");

                    b.Navigation("entity");

                    b.Navigation("permission");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Product", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.Order", "order")
                        .WithMany("Products")
                        .HasForeignKey("order_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("order");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Account", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Branch", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.DeliveryAccount", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Government", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.MerchantAccount", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Order", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.PaymentType", b =>
                {
                    b.Navigation("orders");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.ShippingType", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
